{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Troubleshooting and Resolving AWS IAM Errors",
    "Resources": {
        "VPC" : {
        "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "EnableDnsSupport" : "true",
          "EnableDnsHostnames" : "true",
          "CidrBlock" : "10.1.0.0/24",
          "Tags" : [
            { "Key" : "Name", "Value" : "VPC" },
            { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
            { "Key" : "Network", "Value" : "VPC" }
          ]
        }
      },
        "Subnet" : {
        "Type" : "AWS::EC2::Subnet",
          "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "AvailabilityZone" : {
            "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
          },
          "CidrBlock" : "10.1.0.0/24",
          "Tags" : [
            { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
            { "Key" : "Network", "Value" : "Subnet" },
            { "Key" : "Name", "Value" : "Subnet" }
          ]
        }
      },
        "InternetGateway" : {
        "Type" : "AWS::EC2::InternetGateway",
        "Properties" : {
          "Tags" : [
            { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
            { "Key" : "Network", "Value" : "Public" }
          ]
        }
      },
        "GatewayAttachment" : {
         "Type" : "AWS::EC2::VPCGatewayAttachment",
         "Properties" : {
           "VpcId" : { "Ref" : "VPC" },
           "InternetGatewayId" : { "Ref" : "InternetGateway" }
         }
      },
        "PublicRouteTable" : {
        "Type" : "AWS::EC2::RouteTable",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "Tags" : [
            { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
            { "Key" : "Network", "Value" : "Public" },
            { "Key" : "Name", "Value" : "Public-RT" }
          ]
        }
      },
        "PublicRoute" : {
        "Type" : "AWS::EC2::Route",
        "DependsOn" : "GatewayAttachment",
        "Properties" : {
          "RouteTableId" : { "Ref" : "PublicRouteTable" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref" : "InternetGateway" }
        }
      },
        "PublicSubnetRouteTableAssociation" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "Subnet" },
          "RouteTableId" : { "Ref" : "PublicRouteTable" }
        }
      },
        "PublicNetworkAcl" : {
        "Type" : "AWS::EC2::NetworkAcl",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "Tags" : [
            { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
            { "Key" : "Network", "Value" : "Public" },
            { "Key" : "Name", "Value" : "Public-NACL" }
          ]
        }
      },
        "InboundSSHPublicNetworkAclEntry" : {
        "Type" : "AWS::EC2::NetworkAclEntry",
        "Properties" : {
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
          "RuleNumber" : "102",
          "Protocol" : "6",
          "RuleAction" : "allow",
          "Egress" : "false",
          "CidrBlock" : "0.0.0.0/0",
          "PortRange" : { "From" : "22", "To" : "22" }
        }
      },
        "InboundEmphemeralPublicNetworkAclEntry" : {
        "Type" : "AWS::EC2::NetworkAclEntry",
        "Properties" : {
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
          "RuleNumber" : "103",
          "Protocol" : "6",
          "RuleAction" : "allow",
          "Egress" : "false",
          "CidrBlock" : "0.0.0.0/0",
          "PortRange" : { "From" : "1024", "To" : "65535" }
        }
      },
        "InboundHTTPPublicNetworkAclEntry" : {
        "Type" : "AWS::EC2::NetworkAclEntry",
        "Properties" : {
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
          "RuleNumber" : "110",
          "Protocol" : "6",
          "RuleAction" : "allow",
          "Egress" : "false",
          "CidrBlock" : "0.0.0.0/0",
          "PortRange" : { "From" : "80", "To" : "80" }
        }
      },
        "OutboundPublicNetworkAclEntry" : {
        "Type" : "AWS::EC2::NetworkAclEntry",
        "Properties" : {
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
          "RuleNumber" : "100",
          "Protocol" : "6",
          "RuleAction" : "allow",
          "Egress" : "true",
          "CidrBlock" : "0.0.0.0/0",
          "PortRange" : { "From" : "0", "To" : "65535" }
        }
      },
        "PublicSubnetNetworkAclAssociation1" : {
        "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "Subnet" },
          "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
        }
      },
        "EC2SecurityGroupPublic" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Enable access to the EC2 host",
          "VpcId" : { "Ref" : "VPC" },
          "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0" },
            { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0" },
            { "IpProtocol" : "icmp", "FromPort" : "-1",  "ToPort" : "-1",  "CidrIp" : "0.0.0.0/0" }
          ],
          "Tags" : [
              {"Key" : "Name", "Value" : "SG-Public"}
          ]
        }
      },
        "EC2Instance" : {
          "Type" : "AWS::EC2::Instance",
          "Properties" : {
              "InstanceType" : "t3.micro",
              "ImageId" : "ami-0b5eea76982371e91",
              "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                  "#!/bin/bash\n",
                  "/bin/echo 'j|2p*FwV' | /bin/passwd cloud_user --stdin\n",
                "yum update -y\n",
                "yum install -y httpd git wget\n",
                "service httpd start\n",
                "chkconfig httpd on\n",
                "cd /tmp\n",
                "git clone https://github.com/linuxacademy/content-aws-csa2019.git\n",
                "mv /tmp/content-aws-csa2019/lab_files/02_identity_access_control/getting_started_with_iam/* /var/www/html\n"
              ]]}},
              "NetworkInterfaces" : [{
                  "GroupSet"                 : [{ "Ref" : "EC2SecurityGroupPublic" }],
                  "AssociatePublicIpAddress": "true",
                  "DeviceIndex"              : "0",
                  "DeleteOnTermination"      : "true",
                  "SubnetId"                 : { "Ref" : "Subnet" }
              }],
              "Tags" : [
                  {"Key" : "Name", "Value" : "CatPicturesWeb"}
              ]
          }
      },
        "IAMGroup" : {
            "Type" : "AWS::IAM::Group",
            "Properties" : {
              "GroupName" : "DBAGroup",
              "Policies" : [ {
                 "PolicyName" : "StudentRDSPolicy",
                 "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudwatch:*",
                                "ec2:*"
                            ],
                            "Resource": "*"
                        }
                    ]
                }
              } ]
           }
         },    
        "user1": {
          "Type": "AWS::IAM::User",
          "Properties": {
            "Path": "/",
            "LoginProfile": {
              "Password": "k6!AY36^5h1"
            },
            "UserName": "dba-1"
          }
        },
        "user2": {
          "Type": "AWS::IAM::User",
          "Properties": {
            "Path": "/",
            "LoginProfile": {
              "Password": "k6!AY36^5h1"
            },
            "UserName": "dba-2"
          }
        },
        "user3": {
          "Type": "AWS::IAM::User",
          "Properties": {
            "Path": "/",
            "LoginProfile": {
              "Password": "k6!AY36^5h1"
            },
            "UserName": "dba-3"
          }
        },
        "addUserToGroup" : {
           "Type" : "AWS::IAM::UserToGroupAddition",
           "Properties" : {
              "GroupName" : { "Ref" : "IAMGroup" },
              "Users" : [ { "Ref" : "user1" }, { "Ref" : "user2" }, { "Ref" : "user3" } ]
           }
        }
    },
    "Outputs" : {
        "pubIpAddress1" : {
          "Description" : "PUBLIC ip address of INSTANCE1 ",
          "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicIp" ] }
        }
    }
}