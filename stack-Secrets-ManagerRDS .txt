AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value:  !Join ['', [!Ref "AWS::StackName", "-VPC" ]]
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.0.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list  
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-A
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select [ 1, !GetAZs ]    # Get the second AZ in the list  
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-B
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable
  IntEndpointSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: IntEndpointSG
      GroupDescription: Interface Endpoint Security Group 
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.1.0.0/16 
      Tags:
        - Key: Name
          Value: IntEndpointSG
  RDSInterfaceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.us-east-1.rds
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      SecurityGroupIds:
        - !Ref IntEndpointSG
  SecretsInterfaceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.us-east-1.secretsmanager	
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      SecurityGroupIds:
        - !Ref IntEndpointSG
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: database-group
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: DatabaseSG
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB subnet group
      SubnetIds:
      - Ref: PrivateSubnetA
      - Ref: PrivateSubnetB
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      BackupRetentionPeriod: '7'
      DBInstanceClass: db.t3.medium
      Engine: mysql
      DBName: example
      MasterUsername: username
      MasterUserPassword: password
      VPCSecurityGroups:
      - Fn::GetAtt:
        - DatabaseSecurityGroup
        - GroupId
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      MultiAZ: false
      StorageType: gp2
      PubliclyAccessible: false
